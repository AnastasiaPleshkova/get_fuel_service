<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>get-fuel-api</artifactId>

    <parent>
        <groupId>ru.pleshkova</groupId>
        <artifactId>get-fuel-service</artifactId>
        <version>1.0.0</version>
    </parent>

    <properties>
        <grpc.version>1.74.0</grpc.version>
        <grpc.validation.version>0.6.13</grpc.validation.version>
        <grpc-spring-boot-starter.version>3.0.0.RELEASE</grpc-spring-boot-starter.version>
        <javax.annotation-api.version>1.3.2</javax.annotation-api.version>
        <protobuf.plugin.version>0.6.1</protobuf.plugin.version>
        <protobuf.version>3.13.0</protobuf.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>${javax.annotation-api.version}</version>
        </dependency>

        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-stub</artifactId>
            <version>${grpc.version}</version>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-protobuf</artifactId>
            <version>${grpc.version}</version>
        </dependency>

        <dependency>
            <groupId>io.envoyproxy.protoc-gen-validate</groupId>
            <artifactId>pgv-java-stub</artifactId>
            <version>${grpc.validation.version}</version>
        </dependency>
        <dependency>
            <groupId>io.envoyproxy.protoc-gen-validate</groupId>
            <artifactId>pgv-java-grpc</artifactId>
            <version>${grpc.validation.version}</version>
        </dependency>

        <dependency>
            <groupId>net.devh</groupId>
            <artifactId>grpc-spring-boot-starter</artifactId>
            <version>${grpc-spring-boot-starter.version}</version>
        </dependency>
    </dependencies>


    <build>
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
            </extension>
        </extensions>


        <plugins>
            <plugin>
                <!-- Компиляция .proto файлов в java-файлы с использованием Protocol Buffer Compiler (protoc) -->
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <version>${protobuf.plugin.version}</version>
                <configuration>
                    <pluginId>grpc-java</pluginId>
                    <protocArtifact>com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}
                    </protocArtifact>
                    <!-- Директория для .proto файлов -->
                    <protoSourceRoot>${project.basedir}/get_fuel_service</protoSourceRoot>
                    <!-- Необходимо НЕ очищать директорию (куда генерируются java-файлы) между этапами генерации compile и compile-custom -->
                    <clearOutputDirectory>false</clearOutputDirectory>
                    <!-- Все .proto-файлы (включая полный путь к файлу и его название) передаются в качестве аргумента в .exe,
                       который компилирует их в в java-файлы. Т.к. командная строка имеет ограничение на длину аргументов,
                       то при большом количестве .proto-файлов необходимо передавать их через аргумент-файл в этот .exe -->
                    <useArgumentFile>true</useArgumentFile>
                </configuration>
                <executions>
                    <!-- Генерация сервисных- и data-классов -->
                    <execution>
                        <id>general-generation</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>compile</goal>
                            <goal>compile-custom</goal>
                        </goals>
                        <configuration>
                            <pluginId>grpc-generation</pluginId>
                            <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}</pluginArtifact>
                        </configuration>
                    </execution>
                    <!-- Генерация классов для валидации входных данных gRPC-запросов на основе данных из .proto файлов -->
                    <execution>
                        <id>validation-generation</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>compile</goal>
                            <goal>compile-custom</goal>
                        </goals>
                        <configuration>
                            <pluginParameter>lang=java</pluginParameter>
                            <pluginId>grpc-validation-generation</pluginId>
                            <pluginArtifact>
                                io.envoyproxy.protoc-gen-validate:protoc-gen-validate:${grpc.validation.version}:exe:${os.detected.classifier}
                            </pluginArtifact>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>